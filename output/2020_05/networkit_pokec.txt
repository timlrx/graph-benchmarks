Profiling dataset data/pokec.txt
using 16 threads
Profiling loading
=================

Function: nk.graphio.EdgeListReader(separator='	', firstNode=0, continuous=True, directed =True).read(filename)
  --------------
  Min:      26.646648889000062
  Median:   26.774797390000003
  Mean:     26.782414991500012
  Stdev:    0.07683833045464075
  Max:      26.905528733999972
  --------------
  samples:  10

Profiling shortest path
=======================

Function: nk.distance.BFS(g, 0, storePaths=False).run().getDistances(False)
  --------------
  Min:      0.5507506400001603
  Median:   0.5594202424999821
  Mean:     0.5629943760000515
  Stdev:    0.012797707112869122
  Max:      0.5850096799999847
  --------------
  samples:  10

Profiling PageRank
==================

Function: nk.centrality.PageRank(g, damp=0.85, tol=1e-3).run().scores()
  --------------
  Min:      0.23926048099997388
  Median:   0.24023849549996612
  Mean:     0.24026656329997423
  Stdev:    0.0005899746407179656
  Max:      0.24107240299986188
  --------------
  samples:  10

Profiling k-core
================

Function: nk.centrality.CoreDecomposition(g).run().scores()
  --------------
  Min:      5.01828232999992
  Median:   5.0599152879999565
  Mean:     5.086260794799932
  Stdev:    0.06857719622099466
  Max:      5.2335083389998545
  --------------
  samples:  10

Profiling strongly connected components
=======================================

Function: nk.components.StronglyConnectedComponents(g).run().getPartition().getVector()
  --------------
  Min:      1.6754095930000403
  Median:   1.749742625999943
  Mean:     1.7382658747999813
  Stdev:    0.03145316755201931
  Max:      1.7751791010000488
  --------------
  samples:  10

