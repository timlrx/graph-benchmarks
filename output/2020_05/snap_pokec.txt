Profiling dataset data/pokec.txt
Profiling loading
=================

Function: snap.LoadEdgeListStr(snap.PNGraph, filename, 0, 1)
  --------------
  Min:      52.56496019900078
  Median:   52.72818191749957
  Mean:     52.838158600399765
  Stdev:    0.2593328314918672
  Max:      53.265633420000086
  --------------
  samples:  10

Profiling 2-hops
================

Function: snap.GetNodesAtHop(g, 0, 2, NodeVec, True)
  --------------
  Min:      0.0037044239998067496
  Median:   0.007214641499558638
  Mean:     0.00804411839981185
  Stdev:    0.0062014958117604605
  Max:      0.02479178499925183
  --------------
  samples:  10

Profiling shortest path
=======================

Function: snap.GetShortPath(g, 0, NIdToDistH, True)
  --------------
  Min:      2.2558699080000224
  Median:   2.2978023204996134
  Mean:     2.309053034399949
  Stdev:    0.03771584892654308
  Max:      2.370159247000629
  --------------
  samples:  10

Profiling PageRank
==================

Function: snap.GetPageRank(g, PRankH, 0.85, 1e-3, 10000000)
  --------------
  Min:      8.54802988099982
  Median:   8.621664707500713
  Mean:     8.618102190699938
  Stdev:    0.04276514939106332
  Max:      8.676720790999752
  --------------
  samples:  10

Profiling k-core
================

Function: snap.GetKCoreNodes(g, CoreIDSzV)
  --------------
  Min:      6.862052053998923
  Median:   6.905947387999731
  Mean:     6.903592959999514
  Stdev:    0.025942054280293336
  Max:      6.939167840999289
  --------------
  samples:  10

Profiling strongly connected components
=======================================

Function: snap.GetSccs(g, Components)
  --------------
  Min:      9.552932475000489
  Median:   9.751670814499448
  Mean:     9.771231345600063
  Stdev:    0.15123297287083345
  Max:      10.130451240000184
  --------------
  samples:  10

