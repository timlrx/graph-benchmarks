Profiling dataset data/amazon.txt
Profiling loading
=================

Function: snap.LoadEdgeListStr(snap.PNGraph, filename, 0, 1)
  --------------
  Min:      1.5869394520000242
  Median:   1.6073549559999947
  Mean:     1.6102063335099865
  Stdev:    0.020689412759402396
  Max:      1.7749165959999118
  --------------
  samples:  100

Profiling 2-hops
================

Function: snap.GetNodesAtHop(g, 0, 2, NodeVec, True)
  --------------
  Min:      0.00026006199982475664
  Median:   0.0002681910000319476
  Mean:     0.0020618566299981465
  Stdev:    0.017841658465383724
  Max:      0.17869385299991336
  --------------
  samples:  100

Profiling shortest path
=======================

Function: snap.GetShortPath(g, 0, NIdToDistH, True)
  --------------
  Min:      0.11443370500001038
  Median:   0.11791341900004682
  Mean:     0.11824833805999788
  Stdev:    0.0032395276654978438
  Max:      0.14108783900019262
  --------------
  samples:  100

Profiling PageRank
==================

Function: snap.GetPageRank(g, PRankH, 0.85, 1e-3, 10000000)
  --------------
  Min:      0.5494802030000301
  Median:   0.5753688744999863
  Mean:     0.575619619160002
  Stdev:    0.011282814484803465
  Max:      0.6050937679999606
  --------------
  samples:  100

Profiling k-core
================

Function: snap.GetKCoreNodes(g, CoreIDSzV)
  --------------
  Min:      0.3591354840000349
  Median:   0.36526599700005136
  Mean:     0.36715659448999305
  Stdev:    0.012304221913770773
  Max:      0.4824173370000153
  --------------
  samples:  100

Profiling strongly connected components
=======================================

Function: snap.GetSccs(g, Components)
  --------------
  Min:      0.3026142500000333
  Median:   0.3129320255000039
  Mean:     0.31457582517999527
  Stdev:    0.010294255364195688
  Max:      0.40425964399992154
  --------------
  samples:  100

